/*
 * JMHCAboutBox.java
 */
package jmhc.forms;

import info.VersionInfo;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.jar.Attributes;
import java.util.jar.Manifest;
import java.util.logging.Level;
import java.util.logging.Logger;
import jmhc.objects.DBSettings;
//import org.jdesktop.application.Action;

public class JMHCAboutBox extends javax.swing.JDialog {

    private javax.swing.JLabel jCiteLabel1;
    private String MAJOR = "";
    private String MINOR = "";//ainAttribs.getValue("MINOR");
    private String BUILD = "";// mainAttribs.getValue("BUILD");
    private String BUILD_DATE = "";// mainAttribs.getValue("BUILD-DATE");
    private String VERSION = "";// mainAttribs.getValue("BUILD-DATE");

    public JMHCAboutBox(java.awt.Frame parent) throws IOException {
        super(parent);

        jCiteLabel1 = new javax.swing.JLabel();

        initComponents();
        getRootPane().setDefaultButton(closeButton);

        this.LabelsSetup();
    }

    //@Action
    public void closeAboutBox() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JLabel appTitleLabel = new javax.swing.JLabel();
        javax.swing.JLabel versionLabel = new javax.swing.JLabel();
        appVersionLabel = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel = new javax.swing.JLabel();
        javax.swing.JLabel appDescLabel = new javax.swing.JLabel();
        javax.swing.JLabel imageLabel = new javax.swing.JLabel();
        javax.swing.JLabel dateLabel = new javax.swing.JLabel();
        appDateLabel = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel homepageLabel2 = new javax.swing.JLabel();
        jLabelHomePage = new javax.swing.JLabel();
        jLabelLicense = new javax.swing.JLabel();
        javax.swing.JLabel jCiteLabel1 = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(jmhc.forms.JMHCApp.class).getContext().getResourceMap(JMHCAboutBox.class);
        setTitle(resourceMap.getString("title")); // NOI18N
        setModal(true);
        setName("aboutBox"); // NOI18N
        setResizable(false);

        appTitleLabel.setFont(appTitleLabel.getFont().deriveFont(appTitleLabel.getFont().getStyle() | java.awt.Font.BOLD, appTitleLabel.getFont().getSize()+4));
        appTitleLabel.setText(resourceMap.getString("Application.title")); // NOI18N
        appTitleLabel.setName("appTitleLabel"); // NOI18N

        versionLabel.setFont(versionLabel.getFont().deriveFont(versionLabel.getFont().getStyle() | java.awt.Font.BOLD));
        versionLabel.setText(resourceMap.getString("versionLabel.text")); // NOI18N
        versionLabel.setName("versionLabel"); // NOI18N

        appVersionLabel.setText(resourceMap.getString("Application.version")); // NOI18N
        appVersionLabel.setName("appVersionLabel"); // NOI18N

        homepageLabel.setFont(homepageLabel.getFont().deriveFont(homepageLabel.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel.setText(resourceMap.getString("homepageLabel.text")); // NOI18N
        homepageLabel.setName("homepageLabel"); // NOI18N

        appDescLabel.setText(resourceMap.getString("appDescLabel.text")); // NOI18N
        appDescLabel.setName("appDescLabel"); // NOI18N

        imageLabel.setIcon(resourceMap.getIcon("imageLabel.icon")); // NOI18N
        imageLabel.setName("imageLabel"); // NOI18N

        dateLabel.setFont(dateLabel.getFont().deriveFont(dateLabel.getFont().getStyle() | java.awt.Font.BOLD));
        dateLabel.setText(resourceMap.getString("dateLabel.text")); // NOI18N
        dateLabel.setName("dateLabel"); // NOI18N

        appDateLabel.setText(resourceMap.getString("appDateLabel.text")); // NOI18N
        appDateLabel.setName("appDateLabel"); // NOI18N

        homepageLabel1.setFont(homepageLabel1.getFont().deriveFont(homepageLabel1.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel1.setText(resourceMap.getString("homepageLabel1.text")); // NOI18N
        homepageLabel1.setName("homepageLabel1"); // NOI18N

        homepageLabel2.setFont(homepageLabel2.getFont().deriveFont(homepageLabel2.getFont().getStyle() | java.awt.Font.BOLD));
        homepageLabel2.setText(resourceMap.getString("homepageLabel2.text")); // NOI18N
        homepageLabel2.setName("homepageLabel2"); // NOI18N

        jLabelHomePage.setForeground(resourceMap.getColor("jLabelHomePage.foreground")); // NOI18N
        jLabelHomePage.setText(resourceMap.getString("jLabelHomePage.text")); // NOI18N
        jLabelHomePage.setToolTipText(resourceMap.getString("jLabelHomePage.toolTipText")); // NOI18N
        jLabelHomePage.setName("jLabelHomePage"); // NOI18N
        jLabelHomePage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHomePageMouseClicked(evt);
            }
        });

        jLabelLicense.setForeground(resourceMap.getColor("jLabelLicense.foreground")); // NOI18N
        jLabelLicense.setText(resourceMap.getString("jLabelLicense.text")); // NOI18N
        jLabelLicense.setToolTipText(resourceMap.getString("jLabelLicense.toolTipText")); // NOI18N
        jLabelLicense.setName("jLabelLicense"); // NOI18N
        jLabelLicense.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLicenseMouseClicked(evt);
            }
        });

        jCiteLabel1.setForeground(resourceMap.getColor("jCiteLabel1.foreground")); // NOI18N
        jCiteLabel1.setText(resourceMap.getString("jCiteLabel1.text")); // NOI18N
        jCiteLabel1.setToolTipText(resourceMap.getString("jCiteLabel1.toolTipText")); // NOI18N
        jCiteLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCiteLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCiteLabel1MouseClicked(evt);
            }
        });

        closeButton.setIcon(resourceMap.getIcon("closeButton.icon")); // NOI18N
        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setToolTipText(resourceMap.getString("closeButton.toolTipText")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(appTitleLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 567, Short.MAX_VALUE))
                            .addComponent(appDescLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(homepageLabel)
                                    .addComponent(dateLabel)
                                    .addComponent(homepageLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelLicense)
                                    .addComponent(jLabelHomePage)
                                    .addComponent(appDateLabel))
                                .addGap(109, 109, 109))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(versionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(appVersionLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(homepageLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCiteLabel1)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(appTitleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(appDescLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(versionLabel)
                            .addComponent(appVersionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homepageLabel)
                            .addComponent(jLabelHomePage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLabel)
                            .addComponent(appDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homepageLabel1)
                            .addComponent(jLabelLicense))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homepageLabel2)
                            .addComponent(jCiteLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jCiteLabel1.getAccessibleContext().setAccessibleName(resourceMap.getString("jCiteLabel1.AccessibleContext.accessibleName")); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabelHomePageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHomePageMouseClicked
        URI u;
        try {
            u = new URI(jLabelHomePage.getText());
            java.awt.Desktop.getDesktop().browse(u);
        } catch (IOException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabelHomePageMouseClicked

    private void jLabelLicenseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLicenseMouseClicked
        URI u;
        try {
            u = new URI(jLabelLicense.getText());
            java.awt.Desktop.getDesktop().browse(u);
        } catch (IOException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabelLicenseMouseClicked

    private void jCiteLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCiteLabel1MouseClicked
        URI u;
        try {
            String t = "http://doi.wiley.com/10.1111/j.1755-0998.2011.02997.x";
            u = new URI(t);
            java.awt.Desktop.getDesktop().browse(u);
        } catch (IOException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(DBSettings.loggerProgram).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCiteLabel1MouseClicked

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible(false);

    }//GEN-LAST:event_closeButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel appDateLabel;
    private javax.swing.JLabel appVersionLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabelHomePage;
    private javax.swing.JLabel jLabelLicense;
    // End of variables declaration//GEN-END:variables

    private void LabelsSetup() throws IOException {

        getManifestInfo();

        //info.VersionInfo version = new VersionInfo();
        //this.appVersionLabel.setText(version.getVersion());
        //this.appDateLabel.setText(version.getDate());

        this.appVersionLabel.setText(this.MAJOR + "." + this.MINOR + "." + this.BUILD);
        this.appDateLabel.setText(this.BUILD_DATE);

    }

    public void getManifestInfo() throws IOException {

        try {

            Class clazz = JMHCAboutBox.class;
            String className = clazz.getSimpleName();
            String classFileName = className + ".class";
            String pathToThisClass = clazz.getResource(classFileName).toString();

            String pathToManifest = pathToThisClass.toString().substring(0, pathToThisClass.lastIndexOf("jmhc") - 1);
            pathToManifest += "/META-INF/MANIFEST.MF";
            Manifest manifest = new Manifest(new URL(pathToManifest).openStream());

            Attributes mainAttribs = manifest.getMainAttributes();
            MAJOR = mainAttribs.getValue("MAJOR");
            MINOR = mainAttribs.getValue("MINOR");
            BUILD = mainAttribs.getValue("BUILD");
            BUILD_DATE = mainAttribs.getValue("BUILD-DATE");
            VERSION = mainAttribs.getValue("VERSION");

            /*
            MAJOR: ${version.major}
            MINOR: ${version.minor}
            RELEASE: ${release}
            BUILD: 11
            BUILD-DATE: 2013-08-07 16:44:43
            PROTOCOL: ${protocol}
            APPCODE: ${appcode}
             */

        } catch (Exception e) {
        }
    }
}
